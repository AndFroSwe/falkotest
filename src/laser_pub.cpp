/*
 * This node takes a lasermessage from an array and publishes it to ROS so that
 * it can be visualized in RViz
 */

// ROS
#include "ros/ros.h"
#include "sensor_msgs/LaserScan.h"

int main(int argc, char *argv[])
{
    // Names
    const char node_name[] = "laser_node";
    const char pub_topic[] = "/testlaser";
    const char scan_frame[] = "scan_frame";

    ROS_INFO("Node %s running", node_name);

    // Scan parameters
    double min_angle = -M_PI;
    double max_angle = M_PI;
    int num_readings = 1440;
    double freq = 0.5;
    double range_min = 0.05;
    double range_max = 10;
    double testRanges[]  = {250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 5.62, 5.591, 5.574, 5.595, 5.59, 5.613, 5.605, 5.619, 5.645, 5.678, 5.645, 5.644, 5.677, 5.684, 5.675, 5.675, 5.681, 5.712, 5.751, 5.742, 5.766, 5.807, 5.801, 5.833, 21.32, 21.829, 23.012, 23.046, 23.089, 23.111, 23.164, 23.182, 22.961, 22.104, 21.701, 18.683, 18.667, 250, 18.106, 250, 2.94, 2.874, 2.834, 2.772, 2.745, 2.732, 2.691, 2.66, 2.632, 2.615, 2.614, 2.565, 2.538, 2.527, 2.523, 2.471, 2.447, 2.441, 2.431, 2.421, 2.421, 2.415, 2.381, 2.354, 2.36, 2.344, 2.342, 2.318, 2.335, 2.27, 2.266, 2.253, 2.251, 2.252, 2.212, 2.209, 2.179, 2.188, 2.189, 2.179, 2.178, 2.151, 2.18, 2.169, 2.162, 2.152, 2.125, 2.122, 2.127, 2.121, 2.114, 2.1, 2.118, 2.115, 2.097, 2.13, 2.155, 2.161, 2.167, 2.163, 2.18, 2.174, 2.174, 2.18, 2.222, 2.236, 2.221, 2.206, 2.237, 2.228, 2.229, 2.23, 2.029, 1.905, 1.875, 1.857, 1.846, 1.845, 1.842, 1.827, 1.825, 1.808, 1.797, 1.799, 1.797, 1.813, 1.816, 1.809, 1.831, 1.833, 1.846, 1.891, 1.976, 2.01, 1.999, 2.006, 1.988, 2.01, 2.021, 1.998, 2.011, 2.008, 2.009, 2.002, 1.998, 1.999, 2.006, 1.98, 1.991, 1.998, 1.998, 1.984, 1.984, 1.992, 1.975, 1.973, 1.99, 1.965, 1.991, 1.935, 1.947, 1.967, 1.99, 2, 1.941, 1.775, 1.649, 1.563, 1.524, 1.527, 1.502, 1.521, 1.501, 1.51, 1.515, 1.521, 1.498, 1.493, 1.486, 1.487, 1.479, 1.475, 1.474, 1.479, 1.498, 1.47, 1.471, 1.508, 1.505, 1.521, 1.582, 1.588, 1.611, 1.604, 1.616, 1.632, 1.643, 1.634, 1.631, 1.668, 1.66, 1.654, 1.683, 1.694, 1.668, 1.691, 1.683, 1.68, 1.686, 1.697, 1.691, 1.706, 1.691, 1.694, 1.71, 1.688, 1.708, 1.7, 1.702, 1.695, 1.674, 1.651, 1.659, 1.649, 1.642, 1.63, 1.574, 1.548, 1.489, 1.481, 1.478, 1.42, 1.408, 1.38, 1.356, 1.359, 1.375, 1.336, 1.35, 1.364, 1.36, 1.363, 1.327, 1.341, 1.309, 1.302, 1.315, 1.31, 1.311, 1.319, 1.329, 1.306, 1.305, 1.319, 1.297, 1.316, 1.313, 1.301, 1.298, 1.308, 1.307, 1.281, 1.287, 1.275, 1.314, 1.296, 1.325, 1.304, 1.298, 1.307, 1.291, 1.282, 1.285, 1.281, 1.279, 1.296, 1.284, 1.265, 1.276, 1.283, 1.279, 1.278, 1.284, 1.287, 1.297, 1.27, 1.265, 1.282, 1.285, 1.277, 1.274, 1.264, 1.267, 1.292, 1.323, 1.403, 1.552, 1.622, 1.568, 1.55, 1.508, 1.561, 1.452, 1.644, 1.625, 1.665, 1.634, 1.547, 1.405, 1.293, 1.275, 1.313, 1.359, 1.326, 1.311, 1.339, 1.397, 1.347, 1.402, 1.306, 1.259, 1.256, 1.287, 1.5, 1.512, 1.483, 1.415, 1.446, 1.353, 1.427, 1.397, 1.535, 1.573, 1.614, 1.592, 1.579, 1.645, 1.581, 1.528, 1.607, 1.635, 1.646, 1.728, 1.731, 1.771, 1.765, 1.781, 1.716, 1.672, 1.604, 1.583, 1.6, 1.592, 1.6, 1.577, 1.593, 1.597, 1.586, 1.539, 1.47, 1.389, 1.314, 1.298, 1.317, 1.306, 1.314, 1.311, 1.317, 1.294, 1.313, 1.337, 1.337, 1.317, 1.324, 1.327, 1.331, 1.328, 1.339, 1.33, 1.342, 1.333, 1.353, 1.319, 1.343, 1.351, 1.377, 1.438, 1.592, 1.662, 1.661, 1.66, 1.677, 1.661, 1.731, 1.774, 1.769, 1.844, 1.828, 1.884, 1.873, 1.894, 1.908, 1.892, 1.884, 1.907, 1.943, 1.915, 1.946, 1.946, 1.953, 1.9, 1.854, 1.85, 1.834, 1.844, 1.805, 1.817, 1.796, 1.795, 1.776, 1.786, 1.792, 1.786, 1.766, 1.786, 1.779, 1.783, 1.768, 1.774, 1.757, 1.741, 1.733, 1.702, 1.659, 1.62, 1.57, 1.578, 1.563, 1.542, 1.547, 1.537, 1.521, 1.544, 1.54, 1.535, 1.523, 1.579, 1.595, 1.598, 1.615, 1.63, 1.635, 1.623, 1.597, 1.621, 1.61, 1.615, 1.709, 2.039, 2.079, 2.065, 2.055, 2.04, 2.048, 2.048, 2.031, 2.053, 2.015, 2.001, 1.996, 1.963, 1.955, 1.911, 1.866, 1.835, 1.788, 1.719, 1.689, 1.653, 1.511, 1.47, 1.475, 1.474, 1.458, 1.48, 1.468, 1.459, 1.468, 1.468, 1.461, 1.468, 1.479, 1.465, 1.453, 1.479, 1.479, 1.48, 1.521, 1.529, 1.541, 1.56, 1.604, 1.627, 1.729, 1.735, 1.771, 1.805, 1.81, 1.828, 1.854, 1.815, 1.848, 1.86, 1.878, 1.885, 1.902, 1.928, 1.923, 1.931, 1.946, 1.958, 1.943, 1.961, 1.981, 1.977, 1.985, 2.005, 2.016, 2.044, 2.031, 2.052, 2.065, 2.071, 2.08, 2.105, 2.105, 2.128, 2.135, 2.149, 2.183, 2.159, 2.186, 2.188, 2.197, 2.207, 2.223, 2.24, 2.256, 2.282, 2.297, 2.311, 2.341, 2.351, 2.383, 2.41, 2.42, 2.45, 2.461, 2.477, 2.511, 2.529, 2.547, 2.571, 2.561, 2.534, 2.552, 2.617, 2.724, 2.812, 2.801, 2.801, 2.789, 2.8, 2.811, 2.81, 2.815, 2.82, 2.84, 2.867, 2.889, 2.901, 2.914, 2.924, 2.946, 3.005, 3.056, 3.051, 3.093, 3.092, 3.14, 3.216, 3.213, 3.2, 3.211, 3.23, 3.242, 3.27, 3.323, 3.357, 3.424, 12.108, 12.065, 12.075, 12.058, 12.023, 12.015, 11.996, 11.981, 11.986, 11.953, 11.959, 11.937, 11.909, 11.903, 11.899, 11.873, 11.882, 11.846, 11.842, 11.808, 11.789, 11.816, 11.815, 11.771, 11.764, 11.766, 11.749, 11.741, 11.732, 11.723, 11.726, 11.707, 11.715, 11.692, 11.7, 11.667, 11.672, 11.673, 11.659, 11.655, 11.654, 11.643, 11.633, 11.64, 11.639, 11.606, 11.619, 11.612, 11.604, 11.608, 11.602, 11.605, 11.593, 11.587, 11.583, 11.581, 11.588, 11.577, 11.567, 11.567, 11.579, 11.577, 11.563, 11.556, 11.41, 11.433, 11.453, 11.558, 11.493, 11.565, 11.568, 11.552, 11.553, 11.56, 11.574, 11.584, 11.561, 11.572, 11.577, 11.568, 11.583, 11.586, 11.586, 11.579, 11.595, 11.591, 11.605, 11.59, 11.616, 11.612, 11.616, 11.631, 11.639, 11.652, 11.654, 11.668, 11.657, 11.651, 11.667, 11.69, 11.688, 11.71, 11.692, 11.712, 11.726, 11.728, 11.736, 11.735, 11.755, 11.77, 11.768, 11.788, 11.791, 11.798, 11.794, 11.814, 11.841, 11.825, 11.856, 11.857, 11.863, 11.906, 11.91, 11.914, 11.931, 11.955, 11.965, 11.97, 11.98, 12.006, 12.016, 12.027, 12.044, 12.067, 12.082, 12.115, 12.129, 12.136, 12.151, 250, 3.819, 3.839, 3.819, 3.848, 3.832, 3.837, 3.839, 3.813, 3.817, 3.811, 3.815, 3.82, 3.873, 3.875, 3.885, 3.884, 3.834, 3.848, 3.824, 3.689, 3.714, 3.636, 3.564, 3.493, 3.423, 3.41, 3.355, 3.323, 3.293, 3.275, 3.226, 3.196, 3.188, 3.145, 3.123, 3.112, 3.093, 3.057, 3.005, 3.002, 3, 2.942, 2.908, 2.888, 2.89, 2.864, 2.848, 2.815, 2.789, 2.79, 2.776, 2.772, 2.772, 2.725, 2.713, 2.704, 2.704, 2.695, 2.695, 2.704, 2.704, 2.712, 2.706, 2.604, 2.562, 2.543, 2.526, 2.48, 2.469, 2.453, 2.441, 2.443, 2.428, 2.401, 2.368, 2.36, 2.349, 2.346, 2.339, 2.314, 2.309, 2.283, 2.277, 2.267, 2.255, 2.264, 2.225, 2.215, 2.194, 2.191, 2.175, 2.172, 2.149, 2.168, 2.142, 2.142, 2.128, 2.08, 2.073, 2.064, 2.068, 2.068, 2.06, 2.062, 2.042, 2.021, 2.002, 2.002, 1.991, 1.986, 1.98, 1.957, 1.981, 1.992, 1.954, 1.937, 1.918, 1.913, 1.895, 1.881, 1.891, 1.879, 1.884, 1.905, 1.886, 1.872, 1.85, 1.852, 1.828, 1.842, 1.835, 1.825, 1.8, 1.821, 1.828, 1.828, 1.831, 1.81, 1.804, 1.779, 1.767, 1.781, 1.768, 1.771, 1.771, 1.759, 1.751, 1.771, 1.761, 1.777, 1.776, 1.776, 1.803, 1.82, 1.838, 1.866, 1.79, 1.728, 1.699, 1.685, 1.671, 1.66, 1.67, 1.656, 1.661, 1.666, 1.652, 1.63, 1.638, 1.641, 1.627, 1.623, 1.635, 1.626, 1.617, 1.613, 1.603, 1.61, 1.61, 1.599, 1.587, 1.584, 1.583, 1.584, 1.579, 1.567, 1.569, 1.56, 1.538, 1.565, 1.542, 1.536, 1.567, 1.544, 1.551, 1.547, 1.516, 1.524, 1.511, 1.523, 1.522, 1.514, 1.516, 1.492, 1.504, 1.509, 1.482, 1.493, 1.485, 1.499, 1.496, 1.482, 1.48, 1.475, 1.473, 1.49, 1.473, 1.482, 1.463, 1.467, 1.459, 1.469, 1.453, 1.455, 1.469, 1.458, 1.468, 1.452, 1.463, 1.449, 1.457, 1.447, 1.439, 1.439, 1.46, 1.439, 1.44, 1.438, 1.435, 1.44, 1.445, 1.426, 1.425, 1.432, 1.427, 1.415, 1.432, 1.424, 1.412, 1.425, 1.428, 1.438, 1.418, 1.423, 1.436, 1.431, 1.426, 1.426, 1.447, 1.419, 1.427, 1.42, 1.43, 1.41, 1.439, 1.409, 1.422, 1.435, 1.435, 1.415, 1.39, 1.4, 1.426, 1.412, 1.419, 1.397, 1.418, 1.403, 1.411, 1.434, 1.414, 1.419, 1.409, 1.427, 1.414, 1.417, 1.417, 1.411, 1.435, 1.409, 1.422, 1.416, 1.432, 1.425, 1.431, 1.423, 1.431, 1.418, 1.439, 1.412, 1.422, 1.428, 1.433, 1.418, 1.434, 1.437, 1.44, 1.432, 1.437, 10.855, 10.857, 10.856, 10.86, 10.881, 10.889, 10.885, 10.873, 10.904, 10.911, 10.921, 10.92, 10.933, 250, 2.356, 2.316, 2.248, 2.195, 2.139, 2.097, 2.063, 2.012, 1.985, 1.924, 1.899, 1.869, 1.824, 1.813, 1.803, 1.763, 1.747, 1.719, 1.709, 1.704, 1.688, 1.639, 1.646, 1.609, 1.588, 1.578, 1.567, 1.549, 1.52, 1.492, 1.506, 1.528, 1.501, 1.532, 1.532, 1.532, 1.531, 1.526, 1.542, 1.542, 1.542, 1.54, 1.538, 1.557, 1.552, 1.55, 1.546, 1.562, 1.553, 1.567, 1.566, 1.566, 1.572, 1.551, 1.591, 1.596, 1.599, 1.593, 1.604, 1.598, 1.595, 1.585, 1.596, 1.62, 1.594, 1.633, 1.631, 1.613, 1.624, 1.63, 1.642, 1.635, 1.654, 1.646, 1.662, 1.648, 1.649, 1.659, 1.658, 1.688, 1.681, 1.688, 1.694, 1.678, 1.695, 1.689, 1.686, 1.704, 1.699, 1.719, 1.724, 1.731, 1.729, 1.734, 1.744, 1.753, 1.75, 1.777, 1.78, 1.773, 1.779, 1.778, 1.776, 1.799, 1.794, 1.813, 1.808, 1.822, 1.808, 1.836, 1.822, 1.835, 1.845, 1.855, 1.856, 1.872, 1.866, 1.888, 1.882, 1.891, 1.913, 1.912, 1.927, 1.916, 1.92, 1.938, 1.934, 1.977, 1.972, 1.974, 1.97, 1.998, 2.001, 2.01, 2.031, 2.022, 2.039, 2.054, 2.044, 2.076, 2.077, 2.105, 2.134, 2.193, 2.2, 2.187, 2.16, 2.184, 2.176, 2.174, 2.161, 2.169, 2.143, 2.148, 2.143, 2.136, 2.118, 2.127, 2.109, 2.141, 2.136, 2.146, 2.131, 2.159, 2.139, 2.167, 2.195, 2.228, 2.215, 2.214, 2.232, 2.25, 2.276, 2.306, 2.305, 2.324, 2.33, 2.342, 2.379, 2.406, 2.426, 2.425, 2.426, 2.446, 2.464, 2.488, 2.519, 2.522, 2.554, 2.559, 2.581, 2.613, 2.634, 2.651, 2.652, 2.684, 2.731, 2.751, 2.761, 2.775, 2.814, 2.842, 2.867, 2.887, 2.922, 2.966, 3.01, 3.118, 3.139, 3.139, 3.147, 3.143, 3.118, 3.123, 3.122, 3.134, 3.154, 3.157, 3.195, 3.221, 3.232, 3.263, 3.306, 3.349, 3.443, 3.489, 3.479, 3.492, 3.505, 3.519, 3.534, 3.607, 3.725, 3.822, 3.886, 3.922, 3.991, 4.063, 4.126, 4.194, 4.253, 4.291, 4.289, 4.293, 4.271, 4.265, 4.251, 4.223, 4.246, 4.243, 4.246, 4.267, 4.242, 4.271, 250, 15.705, 15.89, 16.172, 16.401, 16.571, 16.903, 17.157, 17.337, 17.702, 17.94, 18.313, 18.526, 18.878, 19.159, 19.659, 19.896, 20.309, 20.669, 21.071, 21.554, 22.006, 21.988, 22.021, 22.134, 22.148, 22.127, 22.098, 22.077, 22.042, 22.033, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250};

    // Initialize ROS
    ros::init(argc, argv, node_name);
    ros::NodeHandle n;

    // Create a publisher
    ros::Publisher laser_pub = n.advertise<sensor_msgs::LaserScan>(pub_topic, 1000);

    // Create the message
    ros::Time t = ros::Time::now();
    sensor_msgs::LaserScan scan; // Create the message
    // Populate the message
    scan.header.stamp = t;
    scan.header.frame_id = scan_frame;
    scan.angle_min = min_angle;
    scan.angle_max = max_angle;
    scan.angle_increment = (double) (max_angle - min_angle)/num_readings;
    scan.time_increment = (double) 1/freq/num_readings;
    scan.range_min = range_min;
    scan.range_max = range_max;

    // Populate reading arrays
    scan.ranges.resize(num_readings);
    scan.intensities.resize(num_readings);
    for (int i = 0; i < num_readings; ++i) {
        scan.ranges[i] = testRanges[i];
        scan.intensities[i] = 0; // This can be 0, not important
    }

    // Main loop
    ros::Rate rate(0.5);
    while(ros::ok())
    {
        laser_pub.publish(scan);
        rate.sleep();
    }


    return 0;
}
